plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'com.google.protobuf' version '0.8.13'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.grpc:grpc-stub:1.61.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'io.grpc:grpc-protobuf:1.61.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'io.grpc:grpc-netty-shaded:1.61.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

protobuf {
    protoc {artifact = "com.google.protobuf:protoc:3.25.2"}
    plugins{
        grpc {artifact = "io.grpc:protoc-gen-grpc-java:1.61.1"}
    }
    generateProtoTasks{
        all()*.plugins {grpc {}}
    }
    // default proto plugin generate stub in build folder
    // change the stub generate folder
//    generatedFilesBaseDir = "$projectDir/src/generated"
}

sourceSets{
    main{
        java{
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'

        }
    }
}
tasks.named('test') {
    useJUnitPlatform()
}
