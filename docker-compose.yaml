services:

  sender:
    container_name: microservice-sender
    build:
      context: microservice-sender
      dockerfile: Dockerfile
    restart: always
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - 8080:8080
    depends_on:
      - kafka


  receiver:
    container_name: microservice-receiver
    build:
      context: microservice-reciever
      dockerfile: Dockerfile
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/people
      - SPRING_DATASOURCE_USERNAME=alex
      - SPRING_DATASOURCE_PASSWORD=alex
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - db
      - kafka

    ports:
      - 8081:8081


  db:
    container_name: db
    image: postgres:latest
    environment:
      - POSTGRES_USER=alex
      - POSTGRES_PASSWORD=alex
      - POSTGRES_DB=people
    ports:
      - 5432:5432
    volumes:
      - C:\Users\Alex\Desktop\volume:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8082:8081
    depends_on:
      - db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3

    depends_on:
      - zookeeper
